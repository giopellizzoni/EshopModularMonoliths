# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - -'
      Write-Host ' reflect Azure Devops repo changes to GitHub repo'
      Write-Host ' - - - - - - - - - - - - - - - - - - - - - - - - - '
      
      $AzureRepoName = "EshopModularMonoliths"
      $ADOCloneUrl = "dev.azure.com/pellizzonigio/StudiesProject/_git/EshopModularMonoliths"
      $GithubCloneURL = "github.com/giopellizzoni/EshopModularMonolith.git"
      
      $stageDir = pwd | Split-Path
      Write-Host "stage Dir is:  $stageDir"

      $githubDir = $stageDir +"\"+"gitHub"
      Write-Host "stage Dir is:  $stageDir"
      
      $destination = $githubDir +"\"+"$AzureRepoName"+".git"
      Write-Host "github Dir is:  $destination"

      $sourceURL = 'https://$(AzureDevOps.PAT)@$(ADOCloneUrl)'
      Write-Host "source URL: $sourceURL"

      $destURL = "https://" + $($(Github.PAT)) + "@" + $($GithubCloneURL)
      Write-Host "dest URL: $destURL"
      
      # $alias = 'giopellizzoni:'+ "$(Github.PAT)"
      
      
      
      
      # #Check if the parent directory exists and delete
      # if((Test-Path -path $githubDir))
      # {
      #   Remove-Item -Path $githubDir -Recurse -force
      # }
      # if(!(Test-Path -path $githubDir))
      # {
      #   New-Item -ItemType directory -Path $githubDir
      #   Set-Location $githubDir
      #   git clone --mirror $sourceURL
      # }
      # else
      # {
      #   Write-Host "The given folder path $githubDir already exists";
      # }
      # Set-Location $destination
      # Write-Output '*****Git removing remote secondary****'
      # git remote rm secondary
      # Write-Output '*****Git remote add****'
      # git remote add --mirror=fetch secondary $destURL
      # Write-Output '*****Git fetch origin****'
      # git fetch $sourceURL
      # Write-Output '*****Git push secondary****'
      # git push secondary --all
      # Write-Output '**Azure Devops repo synced with Github repo**'
      # Set-Location $stageDir
      # if((Test-Path -path $githubDir))
      # {
      #  Remove-Item -Path $githubDir -Recurse -force
      # }